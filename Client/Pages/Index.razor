@page "/"
@using Microsoft.AspNetCore.Components.Authorization
@using jVision.Shared.Models 
<AuthorizeView>
    <Authorized>
        <h1>Hello @context.User.Identity.Name</h1>

        <button class="btn btn-success" @onclick="AddBox">Click me!</button>
        <button class="btn btn-success" @onclick="DeleteBox">dclcisdf</button>
        @if (boxes == null)
        {
            <p><em>Loading...</em></p>
        }
        else
        {
            @foreach (var box in boxes)
            {
               
            }
            @error
        }

    </Authorized>
    <Authorizing>
        <h1>Loading ...</h1>
    </Authorizing>
</AuthorizeView>

@code {
    [Inject] public HttpClient Http { get; set; }

    private IList<BoxDTO> boxes = new List<BoxDTO>();
    private IList<ServiceDTO> services = new List<ServiceDTO>();
    private IList<BoxDTO> boxesAdded = new List<BoxDTO>();
    private IList<ServiceDTO> servicesAdded = new List<ServiceDTO>();
    public string hello = "hello";
    private string error;
    private string requestUri = "Box";
    protected override async Task OnInitializedAsync()
    {
        try
        {
            boxes = await Http.GetFromJsonAsync<IList<BoxDTO>>(requestUri);
        } catch (Exception)
        {
            error = "Error Encountered";
        };
    }

    private async Task AddBox()
    {
        Console.WriteLine("anyuthing");
        ServiceDTO newService = new ServiceDTO
        {
            Port = 22
        };
        servicesAdded.Add(newService);
        BoxDTO newBox = new BoxDTO
        {
            Ip = "192.168.1.1",
            UserName = "jbrick123",
            Hostname = "Hostname",
            State = false,
            Comments = "none",
            Active = false,
            Pwned = false,
            Unrelated = false,
            Comeback = false,
            Os = "Linux",
            Cidr = "/24",
            Services = servicesAdded
        };
        boxesAdded.Add(newBox);
        var response = await Http.PostAsJsonAsync(requestUri, boxesAdded);
        Console.WriteLine(response);

    }

    private async Task DeleteBox()
    {
        await Http.DeleteAsync(requestUri);
    }
}

